NAME:Benedict Guthiga
ADM NO:BSE-5-0164/2024


#include <iostream>
using namespace std;

// Node class
class Node {
public:
    int data;
    Node* next;

    Node(int value) {
        data = value;
        next = nullptr;
    }
};

// Head pointer
Node* head = nullptr;

// Insert at beginning
void insertAtBegin(int data) {
    Node* newNode = new Node(data);
    newNode->next = head;
    head = newNode;
}

// Delete at beginning
void deleteAtBegin() {
    if (head == nullptr) return;
    Node* temp = head;
    head = head->next;
    delete temp;
}

// Delete at end
void deleteAtEnd() {
    if (head == nullptr) return;
    if (head->next == nullptr) {
        delete head;
        head = nullptr;
        return;
    }
    Node* temp = head;
    while (temp->next->next != nullptr)
        temp = temp->next;
    delete temp->next;
    temp->next = nullptr;
}

// Delete by value
void deleteByValue(int key) {
    Node* temp = head;
    Node* prev = nullptr;

    if (temp != nullptr && temp->data == key) {
        head = temp->next;
        delete temp;
        return;
    }

    while (temp != nullptr && temp->data != key) {
        prev = temp;
        temp = temp->next;
    }

    if (temp == nullptr) return;

    prev->next = temp->next;
    delete temp;
}

// Search
bool search(int key) {
    Node* temp = head;
    while (temp != nullptr) {
        if (temp->data == key) return true;
        temp = temp->next;
    }
    return false;
}

// Print list
void printList() {
    Node* temp = head;
    cout << "[ ";
    while (temp != nullptr) {
        cout << temp->data << " ";
        temp = temp->next;
    }
    cout << "]" << endl;
}

// Main function
int main() {
    insertAtBegin(10);
    insertAtBegin(20);
    insertAtBegin(30);
    cout << "Initial List: ";
    printList(); // [ 30 20 10 ]

    deleteAtBegin();
    cout << "After deleting at beginning: ";
    printList(); // [ 20 10 ]

    deleteAtEnd();
    cout << "After deleting at end: ";
    printList(); // [ 20 ]

    insertAtBegin(40);
    insertAtBegin(50);
    cout << "After adding 40 and 50: ";
    printList(); // [ 50 40 20 ]

    deleteByValue(40);
    cout << "After deleting value 40: ";
    printList(); // [ 50 20 ]

    int key = 20;
    cout << "Searching for " << key << ": " 
         << (search(key) ? "Found" : "Not Found") << endl;

    return 0;
}
